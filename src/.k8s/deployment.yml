kind: Namespace
apiVersion: v1
metadata:
  name: bot
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: bot
  name: botpress-config
data:
  BP_PRODUCTION: "true"
  EXTERNAL_URL: http://bot-server-service
  BP_MODULE_NLU_DUCKLINGURL: http://bot-lang-service:8000
  BP_MODULE_NLU_LANGUAGESOURCES: '[{"endpoint":"http://bot-lang-service:3100"}]'
  DATABASE_URL: postgres://psqladmin@botpress-postgresql-server:H@Sh1CoR3!@botpress-postgresql-server.postgres.database.azure.com:5432/botpress_db?ssl=true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: bot
  name: bot-server
  labels:
    app: bot-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bot-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: bot-server
    spec:
      containers:
        - image: jailtonjunior/bot-custom:v2
          name: bot-server
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "1Gi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: botpress-config
          ports:
            - name: http
              containerPort: 3000
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  namespace: bot
  name: bot-server-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bot-server
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 60
---
apiVersion: v1
kind: Service
metadata:
  namespace: bot
  name: bot-server-service
spec:
  selector:
    app: bot-server
  ports:
    - port: 80
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: bot
  name: bot-lang
  labels:
    app: bot-lang
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bot-lang
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: bot-lang
    spec:
      containers:
        - image: jailtonjunior/bot-custom:v2
          name: bot-lang
          resources:
            limits:
              memory: "3Gi"
              cpu: "500m"
            requests:
              memory: "3Gi"
              cpu: "500m"
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "./duckling -p 8000 & ./bp lang --langDir /botpress/lang --port 3100",
            ]
          ports:
            - containerPort: 3100
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  namespace: bot
  name: bot-lang-service
spec:
  selector:
    app: bot-lang
  ports:
    - name: externalurl
      port: 3100
      targetPort: 3100
    - name: nlu
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: bot
  name: ingress-hosts
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  tls:
    - hosts:
        - botpress.limateixeira.site
      secretName: bot-api-tls
  rules:
    - host: botpress.limateixeira.site
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: bot-server-service
                port:
                  number: 80
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    email: jailton.junior94@outlook.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-production
    solvers:
      - http01:
          ingress:
            class: nginx
